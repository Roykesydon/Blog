<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>mongodb on Roykesydon</title>
        <link>https://roykesydon.github.io/Blog/tags/mongodb/</link>
        <description>Recent content in mongodb on Roykesydon</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <lastBuildDate>Fri, 16 Aug 2024 00:00:17 +0800</lastBuildDate><atom:link href="https://roykesydon.github.io/Blog/tags/mongodb/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>MongoDB 筆記</title>
        <link>https://roykesydon.github.io/Blog/p/mongodb-%E7%AD%86%E8%A8%98/</link>
        <pubDate>Fri, 16 Aug 2024 00:00:17 +0800</pubDate>
        
        <guid>https://roykesydon.github.io/Blog/p/mongodb-%E7%AD%86%E8%A8%98/</guid>
        <description>&lt;h2 id=&#34;mongodb&#34;&gt;MongoDB&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;以 BSON (Binary JSON) 儲存資料&lt;/li&gt;
&lt;li&gt;composite index
&lt;ul&gt;
&lt;li&gt;prefix
&lt;ul&gt;
&lt;li&gt;如果有一個 index 是 (a, b)，那麼 (a) 也是有效的 index&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;explain
&lt;ul&gt;
&lt;li&gt;用來看 query 的 execution plan&lt;/li&gt;
&lt;li&gt;cursor
&lt;ul&gt;
&lt;li&gt;BasicCursor
&lt;ul&gt;
&lt;li&gt;會 scan 整個 collection，是個警訊&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;掃描的文件數量
&lt;ul&gt;
&lt;li&gt;nscanned
&lt;ul&gt;
&lt;li&gt;掃描的 index 數量&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;nscannedObjects
&lt;ul&gt;
&lt;li&gt;掃描的 document 數量&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;n
&lt;ul&gt;
&lt;li&gt;回傳的 document 數量&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;nscanned &amp;gt;= nscannedObjects &amp;gt;= n&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;scanAndOrder
&lt;ul&gt;
&lt;li&gt;是否需要把文件都放在 memory 並排序&lt;/li&gt;
&lt;li&gt;還會一次性回傳資料&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;hint
&lt;ul&gt;
&lt;li&gt;強制使用某個 index&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;optimizer 挑選索引
&lt;ul&gt;
&lt;li&gt;第一階段 - 挑選最佳索引
&lt;ul&gt;
&lt;li&gt;最佳索引
&lt;ul&gt;
&lt;li&gt;包含所有的 filter 和 sort 的欄位&lt;/li&gt;
&lt;li&gt;range filter 和 sort 的欄位必須在 equality filter 的後面
&lt;ul&gt;
&lt;li&gt;sort 的欄位必須在 range filter 的後面&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;如果有多個最佳索引就會隨便選一個&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;第二階段 - 透過實驗挑選索引
&lt;ul&gt;
&lt;li&gt;沒有最佳索引就會實驗判斷要選哪個，看看誰先找到指定數量的文件&lt;/li&gt;
&lt;li&gt;換句話說，如果有多個索引，optimizer 會選 nscanned 最小的&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;MMAPv1
&lt;ul&gt;
&lt;li&gt;Mongo 一開始用的 storage engine&lt;/li&gt;
&lt;li&gt;_id 直接對應到 diskloc，也就是 disk 的偏移量
&lt;ul&gt;
&lt;li&gt;查找速度驚人，但是更新就要維護偏移量很費時&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;採用 database-level lock，Mongo 後來也只更新成 collection-level lock&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;WiredTiger
&lt;ul&gt;
&lt;li&gt;MongoDB 收購的 storage engine&lt;/li&gt;
&lt;li&gt;Document-level locking&lt;/li&gt;
&lt;li&gt;可以做到 compression&lt;/li&gt;
&lt;li&gt;5.2 之前
&lt;ul&gt;
&lt;li&gt;_id 會先被用來尋找 recordid，再用 recordid 去獲取 document&lt;/li&gt;
&lt;li&gt;recordid 是 clustered index&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;5.3
&lt;ul&gt;
&lt;li&gt;_id 變成 clustered index&lt;/li&gt;
&lt;li&gt;之前 recordid 只有 64 位，但現在 _id 作為 primary key 有 12 bytes
&lt;ul&gt;
&lt;li&gt;對 secondary index 造成更大的負擔&lt;/li&gt;
&lt;li&gt;Mongo 想達成跨機器和 shard 的唯一性&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        
    </channel>
</rss>
