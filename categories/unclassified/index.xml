<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Unclassified on Roykesydon</title>
        <link>https://roykesydon.github.io/Blog/categories/unclassified/</link>
        <description>Recent content in Unclassified on Roykesydon</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <lastBuildDate>Sat, 30 Mar 2024 00:00:01 +0800</lastBuildDate><atom:link href="https://roykesydon.github.io/Blog/categories/unclassified/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>論文閱讀：A Framework for Extended Reality System Development in Manufacturing</title>
        <link>https://roykesydon.github.io/Blog/p/%E8%AB%96%E6%96%87%E9%96%B1%E8%AE%80a-framework-for-extended-reality-system-development-in-manufacturing/</link>
        <pubDate>Sat, 30 Mar 2024 00:00:01 +0800</pubDate>
        
        <guid>https://roykesydon.github.io/Blog/p/%E8%AB%96%E6%96%87%E9%96%B1%E8%AE%80a-framework-for-extended-reality-system-development-in-manufacturing/</guid>
        <description>&lt;h2 id=&#34;abstract&#34;&gt;Abstract&lt;/h2&gt;
&lt;p&gt;本文想在 manufacturing context 下開發一個 XR (extended reality) 架構，想用 XR 整合並改善傳統工作流程。&lt;/p&gt;
&lt;p&gt;該框架包含五個 iterative phase:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Requirement analysis&lt;/li&gt;
&lt;li&gt;Solution selection&lt;/li&gt;
&lt;li&gt;data preparation&lt;/li&gt;
&lt;li&gt;system implementation&lt;/li&gt;
&lt;li&gt;system evaluation&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;此實驗也強調了 user-centered 的方法在開發有關製造業的 XR 系統的重要性。&lt;/p&gt;
&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;作者認為 XR 系統的整合對製造業的轉型很重要，有助於實現 Industry 4.0。&lt;/p&gt;
&lt;p&gt;盡管研究顯示 XR 在製造業中有巨大潛力，但工程師在日常生活中用 XR 的系統很少，顯示出整合 XR 到製造業是困難且具備挑戰性的。&lt;/p&gt;
&lt;p&gt;本研究想開發一個系統框架，支援未來 XR 系統在製造業的開發，而不是只停留在「wow effect」&lt;/p&gt;
&lt;h2 id=&#34;frame-of-reference&#34;&gt;Frame of reference&lt;/h2&gt;
&lt;h3 id=&#34;extended-reality-classification&#34;&gt;Extended Reality Classification&lt;/h3&gt;
&lt;p&gt;透過電腦實現的現實增強技術可以追溯到 1960s，在近年演變成多種子集，也因此產生不同術語，使人困惑。&lt;/p&gt;
&lt;p&gt;本文說的 XR 被用作總稱，代指所有以電腦為媒介的 Reality Technologies。&lt;/p&gt;
&lt;p&gt;區分不同系統的 XR 十分重要，這樣才能針對製造業中任何一個特定的應用作出正確的決策。&lt;/p&gt;
&lt;p&gt;一種常見的方法是 reality-virtuality continuum，把現實世界和虛擬世界放在兩端，根據靠近哪端進行區分。&lt;/p&gt;
&lt;p&gt;左端是現實世界，右端是虛擬世界。從左到右出現 augmented reality(AR)、mixed reality(MR) 和 virtual reality(VR)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Augmented Reality (AR)
&lt;ul&gt;
&lt;li&gt;最廣泛的定義，有以下三個特徵
&lt;ul&gt;
&lt;li&gt;結合虛擬與現實&lt;/li&gt;
&lt;li&gt;要可以 real-time 的互動&lt;/li&gt;
&lt;li&gt;顯示在 3D 空間&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;用戶要依然可以看到周遭環境，並與之互動，同時獲得諸如文字或圖片的增強體驗&lt;/li&gt;
&lt;li&gt;可透過 smart glass 或手機實現&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Mixed Reality (MR)
&lt;ul&gt;
&lt;li&gt;可以定義為把現實世界和虛擬世界中的東西呈現在一起的應用程式，也就是 reality-virtuality continuum 上的任何位置&lt;/li&gt;
&lt;li&gt;MR 比 AR 更進一步，不只希望虛擬物體疊加在現實世界上，還希望使用者可以像對待真實物體一樣和他們互動&lt;/li&gt;
&lt;li&gt;為了實現 MR，需要一台整合了電腦、半透明玻璃、和感測器的耳機&lt;/li&gt;
&lt;li&gt;某種意義上是更具沉浸感的 AR&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Virtual Reality (VR)
&lt;ul&gt;
&lt;li&gt;使用者完全沉浸在虛擬世界中，無法看到現實世界
&lt;ul&gt;
&lt;li&gt;有三種典型設定：獨立耳機、CAVE (房間是大型投影幕)、連接到電腦的頭戴式顯示器
&lt;ul&gt;
&lt;li&gt;最後一種已佔據主導地位&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;hardware-parameters-for-extended-reality&#34;&gt;Hardware parameters for extended reality&lt;/h3&gt;
&lt;p&gt;深入了解硬體參數也很重要，會影響可用性&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Field of View (FOV)
&lt;ul&gt;
&lt;li&gt;人類的 binocular FOV 大約是 114 度，XR 使用的螢幕具有類似的視野才會是理想的，確保用戶有無縫體驗&lt;/li&gt;
&lt;li&gt;通常 AR 和 VR 的 FOV 會小的多，只有 30-60 度，每次呈現有限的虛擬內容，當需要渲染大型虛擬物件時就會有問題
&lt;ul&gt;
&lt;li&gt;由於 AR 和 MR 並不排斥現實世界，所以如果內容尺寸適當，不影響使用者感知&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;現今的 VR 頭戴裝置 FOV 大得多，落在 90-110 度之間
&lt;ul&gt;
&lt;li&gt;一些先進的模型甚至聲稱到 200 度，超過人類的 FOV&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;具有較小 FOV 的耳機會因為「tunnel vision effect」而分散用戶的注意力&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Frame per Second (FPS)
&lt;ul&gt;
&lt;li&gt;對於 MR 或 AR，30-60 FPS 就足夠了，VR 則建議爭取到 90&lt;/li&gt;
&lt;li&gt;由於使用者沉浸在電腦生成的內容，FPS 太低會導致 motion jitter，導致用戶產生 motion sickness&lt;/li&gt;
&lt;li&gt;FPS 不單由硬體決定，也由軟體決定&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;software-for-extended-reality&#34;&gt;Software for extended reality&lt;/h3&gt;
&lt;p&gt;作者將其分為兩大類，基於「開放開發平台的方法」和基於「已有商業軟體的擴展方法」。開放式開發平台的優點是開發過程完全受控，可以根據個人需求訂製，但需要軟體工程方面的專業知識。&lt;/p&gt;
&lt;p&gt;當今製造業使用的成熟商業軟體也在擴大對 XR 功能的支援，因此，現有用戶可以毫不費力創建 XR 體驗。然而，使用此類軟體來探索 XR 新功能的自由度有限，因為它依賴軟體供應商的更新。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Open development platform
&lt;ul&gt;
&lt;li&gt;兩大主要平台是 Unity3D 和 Unreal Engine 4&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Established commercial software
&lt;ul&gt;
&lt;li&gt;範例
&lt;ul&gt;
&lt;li&gt;Siemens 的 Plant Simulation&lt;/li&gt;
&lt;li&gt;雖然缺乏更高程度的客製化自由度，但節省了創建通用功能的時間和成本&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;research-approach&#34;&gt;Research Approach&lt;/h2&gt;
&lt;p&gt;本文為了開發一個可以提高未來 XR 系統的可用性和接受度的框架，選擇了六個案例。&lt;/p&gt;
&lt;p&gt;它們各自採用了代表了不同公司製造活動的四個階段：design、training、operation、disruptive&lt;/p&gt;
&lt;h2 id=&#34;framework-development&#34;&gt;Framework development&lt;/h2&gt;
&lt;p&gt;XR 系統整合框架的開發採用了 SDLC，也被稱作 application development life cycle，常被用在開發各種 IT 系統。
描述了系統設計人員和開發人員為了確保開發品質，需要遵循的多個階段活動。&lt;/p&gt;
&lt;p&gt;多年來，基於 SLDC 方法開發了各種模型和方法，比如瀑布式開發或是 Scrum。&lt;/p&gt;
&lt;p&gt;本研究中採用的 SDLC 階段如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Identifying problems&lt;/li&gt;
&lt;li&gt;Analyzing the needs&lt;/li&gt;
&lt;li&gt;Designing the system&lt;/li&gt;
&lt;li&gt;Developing and documenting&lt;/li&gt;
&lt;li&gt;Testing the system&lt;/li&gt;
&lt;li&gt;Implementing and maintenance&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;case-1&#34;&gt;Case 1&lt;/h3&gt;
&lt;h4 id=&#34;background&#34;&gt;Background&lt;/h4&gt;
&lt;p&gt;要訓練人員維護機器&lt;/p&gt;
&lt;h4 id=&#34;resarch-process&#34;&gt;Resarch Process&lt;/h4&gt;
&lt;p&gt;有公司進行了案例研究，開發了一種支援小型工具箱維護任務的 AR 系統&lt;/p&gt;
&lt;h4 id=&#34;result-and-conclusion&#34;&gt;Result and conclusion&lt;/h4&gt;
&lt;p&gt;文本教學容易被忽略，以吸引人的物件符號改進。
最後問卷持正面態度。
但還是有一些可改進的點，比如需要連接電腦，在實際工廠車間並不方便。&lt;/p&gt;
&lt;h3 id=&#34;case-2--case-6&#34;&gt;Case 2 ~ Case 6&lt;/h3&gt;
&lt;p&gt;時間問題暫不補&lt;/p&gt;
&lt;h2 id=&#34;the-proposed-framework&#34;&gt;The proposed framework&lt;/h2&gt;
&lt;p&gt;針對上一節 SDLC 的案例總結和整合，結合了以使用者為中心的 XR 系統開發五步驟框架。&lt;/p&gt;
&lt;h3 id=&#34;step-1-understanding-the-requirements&#34;&gt;Step 1: Understanding the requirements&lt;/h3&gt;
&lt;p&gt;聽起來很顯而易見，但實踐中常被跳過或淡化，導致不令人滿意的結果。
而且製造環境比一般用例場景更加複雜。&lt;/p&gt;
&lt;p&gt;全面了解需求是成功開發 XR 系統的重要第一步。
以使用者為中心的設計方法中，採用的比如 observation、stakeholder workshop、contextual inquiry、storyboard、prototyping adopted 都被證明在是別需求方面是有效的。&lt;/p&gt;
&lt;p&gt;應該要可以回答以下問題：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;What actions are taken?&lt;/li&gt;
&lt;li&gt;What support are used?&lt;/li&gt;
&lt;li&gt;What outcome are achieved?&lt;/li&gt;
&lt;li&gt;What main drawbacks are there?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;回答上述問題後，就可以開發 storyboards 和 prototypes 了。&lt;/p&gt;
&lt;p&gt;此外，不只是開發者和負責人，最終用戶也要可以參與評估和回饋，直到最終的需求被解決。&lt;/p&gt;
&lt;h3 id=&#34;step-2-solution-selection&#34;&gt;Step 2: Solution selection&lt;/h3&gt;
&lt;p&gt;通常是根據公司現有硬軟體來選擇，而不是根據哪種解決方案最能滿足要求，使選方案是個困難的決定。&lt;/p&gt;
&lt;h3 id=&#34;step-3-data-preparation&#34;&gt;Step 3: Data preparation&lt;/h3&gt;
&lt;h3 id=&#34;step-4-system-implementation&#34;&gt;Step 4: System implementation&lt;/h3&gt;
&lt;h3 id=&#34;step-5-system-evaluation&#34;&gt;Step 5: System evaluation&lt;/h3&gt;
&lt;h3 id=&#34;iteration&#34;&gt;Iteration&lt;/h3&gt;
&lt;p&gt;在完成所以提出的步驟後可以迭代，以小量的改進進行迭代，直到達成特定需求。&lt;/p&gt;
&lt;h2 id=&#34;framework-validation&#34;&gt;Framework validation&lt;/h2&gt;
&lt;p&gt;該框架被用於一個真實案例，用來評估適用性。
此外，他還與六項先前的研究進行驗證，這些研究部分與提出的框架一致。&lt;/p&gt;
&lt;h3 id=&#34;the-empicial-case&#34;&gt;The empicial case&lt;/h3&gt;
&lt;p&gt;本文的框架被用於開發 VR 工具，好支援汽車公司的產品設計審查。&lt;/p&gt;
&lt;h4 id=&#34;requirement-analysis&#34;&gt;Requirement analysis&lt;/h4&gt;
&lt;p&gt;是一家分布全球的汽車公司，研發中心在瑞典，工廠在中國。&lt;/p&gt;
&lt;p&gt;具體任務是對用於點焊的新型 fixtures 進行 design review。&lt;/p&gt;
&lt;p&gt;目前的做法依賴 CAD 軟體分布在不同地點的不同團隊之間來傳達理念。&lt;/p&gt;
&lt;p&gt;他還需要一個或多個原型，在最終安裝前進行驗證。&lt;/p&gt;
&lt;p&gt;主要缺點是，和原型實體相關的溝通十分冗長。&lt;/p&gt;
&lt;p&gt;此外，最終使用者 ( operators of fixtures) 缺發 CAD 設計的專業知識，導致他們無法參與設計。&lt;/p&gt;
&lt;p&gt;因此，提出了具體要求：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;適用於所有 stakeholder 的虛擬工具，可以直觀地視覺化新產品設計，並和新產品設計互動&lt;/li&gt;
&lt;li&gt;多個 stakeholder 可以從不同的地點參與同一個 virtual session&lt;/li&gt;
&lt;li&gt;所有 stakeholder 都可以口頭交流&lt;/li&gt;
&lt;li&gt;virtual session 可以用圖像或影片形式記錄&lt;/li&gt;
&lt;li&gt;每個 stakeholder 都要有個人化虛擬代表&lt;/li&gt;
&lt;li&gt;要有主持人、與會者和觀眾等角色相關功能&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;solution-selection&#34;&gt;Solution selection&lt;/h4&gt;
&lt;p&gt;選 VR 和 Unity3D&lt;/p&gt;
&lt;h4 id=&#34;data-preparation&#34;&gt;Data preparation&lt;/h4&gt;
&lt;h4 id=&#34;system-implementation&#34;&gt;System implementation&lt;/h4&gt;
&lt;h4 id=&#34;system-evaluation&#34;&gt;System evaluation&lt;/h4&gt;
&lt;p&gt;進行兩次迭代開發，評估 VR 系統是否可以補充或甚至取代現有作法的可行性&lt;/p&gt;
&lt;h4 id=&#34;outcome&#34;&gt;Outcome&lt;/h4&gt;
&lt;p&gt;開發了一個可以支援最多 20 個使用者從任何有網路的地方連線加入的應用程式。&lt;/p&gt;
&lt;h3 id=&#34;external-validation&#34;&gt;External Validation&lt;/h3&gt;
&lt;p&gt;作者挑了七篇有關的 XR 整合到製造業的研究，他們都採取了類似的方法，部分與提出的框架一致。&lt;/p&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;本文第一個貢獻是根據案例結果提出的框架，由五個迭代階段組成：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Requirement analysis&lt;/li&gt;
&lt;li&gt;Solution selection&lt;/li&gt;
&lt;li&gt;Data preparation&lt;/li&gt;
&lt;li&gt;System implementation&lt;/li&gt;
&lt;li&gt;System evaluation&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;通過一個實際案例以及七項先前的研究進行了驗證，這些研究與提出的框架部分一致。&lt;/p&gt;
&lt;p&gt;該研究還會工業從業者提供了知識，有利他們採用 XR 技術做為 工業 4.0 的一部分。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Hololens 2 開發環境設置</title>
        <link>https://roykesydon.github.io/Blog/p/hololens-2-%E9%96%8B%E7%99%BC%E7%92%B0%E5%A2%83%E8%A8%AD%E7%BD%AE/</link>
        <pubDate>Mon, 03 Jul 2023 00:00:01 +0800</pubDate>
        
        <guid>https://roykesydon.github.io/Blog/p/hololens-2-%E9%96%8B%E7%99%BC%E7%92%B0%E5%A2%83%E8%A8%AD%E7%BD%AE/</guid>
        <description>&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;要弄 Hololens 2 的開發環境要一堆有的沒的麻煩東西，紀錄一下避免之後要重裝&lt;/p&gt;
&lt;p&gt;原本很怕版本對不上很麻煩，但實際用起來好像還好&lt;/p&gt;
&lt;p&gt;注意，這不是最小安裝，有些東西我不確定是不是必要的，但我怕麻煩就裝了&lt;/p&gt;
&lt;p&gt;後續請參考微軟的教學&lt;/p&gt;
&lt;h2 id=&#34;我個人的版本紀錄-20230703&#34;&gt;我個人的版本紀錄 (2023/07/03)&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Unity
&lt;ul&gt;
&lt;li&gt;2021.3.27f1 (LTS)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;MRTK
&lt;ul&gt;
&lt;li&gt;2.8.3&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Visual Studio
&lt;ul&gt;
&lt;li&gt;2022&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Mixed Reality OpenXR Plugin
&lt;ul&gt;
&lt;li&gt;1.8.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;作業系統要求&#34;&gt;作業系統要求&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;必須是 Windows 專業版以上，因為要用 Hyper-V
&lt;ol&gt;
&lt;li&gt;先去 BIOS 開 Virtualization Technology&lt;/li&gt;
&lt;li&gt;開啟 Hyper-V&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;前置步驟&#34;&gt;前置步驟&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;安裝 windows SDK&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;聽說裝完最新的後，建議再多裝幾個版本
&lt;ul&gt;
&lt;li&gt;我個人只有裝最新的&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;安裝 visual studio&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;好像會根據 MRTK 的版本有對應的版本要求，不能無腦裝最新&lt;/li&gt;
&lt;li&gt;據說要選 「C++ 開發」和「通用 Windows 平台開發」
&lt;ul&gt;
&lt;li&gt;右邊好像還要選
&lt;ul&gt;
&lt;li&gt;USB 設備連接&lt;/li&gt;
&lt;li&gt;C++ 通用 Windows 平台工具&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;安裝 Hololens 2 模擬器&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;這是給 build 好的程式用的，不是在說 Unity Editor 裡面的手&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;安裝 Unity&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;建議透過 Unity Hub 管理 Unity 版本&lt;/li&gt;
&lt;li&gt;據說裝的 Unity 要裝以下兩個 module
&lt;ul&gt;
&lt;li&gt;Universal Windows Platform Build Support&lt;/li&gt;
&lt;li&gt;Windows Build Support (IL2CPP)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Windows 和 Hololens 都要開啟「開發者模式」&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;下載 Mixed Reality Feature Tool&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;注意看這不是 MRTK&lt;/li&gt;
&lt;li&gt;這可以往 Unity 專案導入 MRTK&lt;/li&gt;
&lt;li&gt;可以導入 MRTK 2.6 以後的工具包&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;創建專案&#34;&gt;創建專案&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Unity 開個 3D 專案&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;File -&amp;gt; Build Settings&lt;/li&gt;
&lt;li&gt;選擇 Universal Windows Platform&lt;/li&gt;
&lt;li&gt;點選 Switch Platform&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;開啟 Mixed Reality Feature Tool&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;針對專案安裝 MRTK
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;必裝&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;MRTK Foundation&lt;/li&gt;
&lt;li&gt;Mixed Reality OpenXR Plugin&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;可選&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;MRTK
&lt;ul&gt;
&lt;li&gt;Examples&lt;/li&gt;
&lt;li&gt;Extensions&lt;/li&gt;
&lt;li&gt;Tools&lt;/li&gt;
&lt;li&gt;TestUtilities&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;剩下的看微軟專案建置教學，實在太多要弄了&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;在模擬器上執行&#34;&gt;在模擬器上執行&lt;/h2&gt;
&lt;p&gt;這坑真的有夠多，我結合上 stack overflow 的解法，所用的步驟:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;要用管理員模式開 Visual Studio，不然有可能遇到權限問題&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Visual studio 要部屬程式的時候，會自己開一個 Hololens 2 Simulator，但他會開超久，然後造成 Timeout，無法部屬，部屬失敗後不要選繼續，也不要關掉模擬器&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;這時候再看情況按 實心 / 空心綠色三角形 (without debugging)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;有可能可以 deploy，但運行時有問題，此時按紅色方塊終止，繼續綠色三角形，不要關掉模擬器&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
</description>
        </item>
        
    </channel>
</rss>
